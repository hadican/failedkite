{{- if .Values.ingress.enabled -}}
{{- $fullName := include "failedkite.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
{{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1" -}}
apiVersion: networking.k8s.io/v1
{{- else if .Capabilities.APIVersions.Has "networking.k8s.io/v1beta1" -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "failedkite.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: {{ .Values.ingress.class }}
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if semverCompare ">=1.14-0" .Capabilities.KubeVersion.Version }}
  ingressClassName: {{ .Values.ingress.class }}
  {{- end }}
  {{- if .Values.ingress.tls.enabled }}
  tls:
    - hosts:
      - {{ .Values.ingress.host }}
      secretName: {{ .Values.ingress.tls.secretName }}
  {{- end }}
  rules:
    - host: {{ .Values.ingress.host }}
      http:
        paths:
        - path: /webhook
          pathType: ImplementationSpecific
        {{- if semverCompare ">=1.14-0" $.Capabilities.KubeVersion.Version }}
          backend:
            service:
              name: {{ $fullName }}
              port:
                number: {{ $svcPort }}
        {{- else }}
          backend:
            serviceName: {{ $fullName }}
            servicePort: {{ $svcPort }}
        {{- end }}
  {{- end }}
